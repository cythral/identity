<Project>
    <Target Name="GenerateEnvFile" AfterTargets="Restore" Condition="!Exists('$(MSBuildThisFileDirectory).env')">
        <ItemGroup>
            <EnvFileLines Include="DB_USER=identity-user" />
            <EnvFileLines Include="DB_PASSWORD=$([System.Guid]::NewGuid())" />
            <EnvFileLines Include="DB_NAME=identity" />
        </ItemGroup>

        <WriteLinesToFile File="$(MSBuildThisFileDirectory).env" Lines="@(EnvFileLines)" />
    </Target>

    <Target Name="PrepareForDockerization" AfterTargets="Publish">
        <MSBuild Targets="GetDockerBuildPropsForSolutionTarget" Projects="$(MSBuildThisFileDirectory)src/Server/Server.csproj">
            <Output TaskParameter="TargetOutputs" ItemName="ProjectInfo" />
        </MSBuild>
    </Target>

    <Target Name="Dockerize" Inputs="@(ProjectInfo)" Outputs="@(ProjectInfo)" AfterTargets="PrepareForDockerization">
        <PropertyGroup>
            <DockerImageTag Condition="'$(DockerImageTag)' == ''">brighid/identity</DockerImageTag>
        </PropertyGroup>

        <ItemGroup>
            <DockerBuildArgs Include="--file $(MSBuildThisFileDirectory)Dockerfile" />
            <DockerBuildArgs Include="--tag $(DockerImageTag)" />
            <DockerBuildArgs Include="--build-arg CONFIGURATION=$(Configuration)" />
            <DockerBuildArgs Include="--build-arg TARGET_FRAMEWORK=%(ProjectInfo.TargetFramework)" />
            <DockerBuildArgs Include="--build-arg ASPNETCORE_VERSION=%(ProjectInfo.AspNetCoreVersion)" />
        </ItemGroup>

        <Exec Command="docker build @(DockerBuildArgs, ' ') $(MSBuildThisFileDirectory)" />
    </Target>
</Project>