@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code
{
    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();

        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = state?.User;
        var isAuthenticated = user?.Identity?.IsAuthenticated ?? false;

        if (!isAuthenticated)
        {
            var relativePath = new Uri(NavigationManager.Uri).AbsolutePath;
            var redirectUri = Uri.EscapeDataString(relativePath);
            NavigationManager.NavigateTo($"login?redirect_uri={redirectUri}");
        }
    }
}