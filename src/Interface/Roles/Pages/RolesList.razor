@namespace Brighid.Identity.Interface.Roles

@using Brighid.Identity.Roles

@page "/roles"
@implements IDisposable
@inject PersistentComponentState ApplicationState
@inject IRoleService roleService

<div class="heading">
    <h1>Identity Roles</h1>
    <a href="#" class="create-new-btn btn-link">Create New <i class="fa fa-plus"></i></a>
</div>

<ul>
    @foreach (var role in Roles)
    {
        <li>
            <span>@role.Name</span>
            <div class="actions">
                <a href="#"><i class="fa fa-trash"></i></a>
            </div>
        </li>
    }
</ul>

@code
{
    private PersistingComponentStateSubscription persistingSubscription;

    IEnumerable<Role> Roles { get; set; } = Array.Empty<Role>();

    protected override async Task OnInitializedAsync()
    {
        persistingSubscription = ApplicationState.RegisterOnPersisting(Persist);
        Roles = await GetRoles();
    }

    public async ValueTask<IEnumerable<Role>> GetRoles()
    {
        ApplicationState.TryTakeFromJson<IEnumerable<Role>>(nameof(Roles), out var roles);
        return roles ?? await roleService.List();
    }

    private Task Persist()
    {
        ApplicationState.PersistAsJson(nameof(Roles), Roles);
        return Task.CompletedTask;
    }

    public void Dispose()
    {
        persistingSubscription.Dispose();
    }
}