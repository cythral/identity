Description: CICD pipeline for Brighid Identity
Parameters:
  GithubToken:
    Type: String
    NoEcho: true
    Description: OAuth token for the Github organization.  Needs read/write access to repos and repo hooks

  GithubOwner:
    Type: String
    Description: Owner of the github repository to track

  GithubRepo:
    Type: String
    Description: Name of the github repository to track

  GithubBranch:
    Type: String
    Description: Name of the github branch to track

  PipelineDefinitionBucket:
    Type: String
    Description: Bucket name where the pipeline definition is located

  PipelineDefinitionKey:
    Type: String
    Description: Key name where the pipeline definition is located

Resources:
  DevDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !ImportValue cfn-dns:HostedZoneId
      RecordSets:
        - Name: identity.dev.brigh.id
          Type: A
          AliasTarget:
            HostedZoneId: !ImportValue cfn-gateway:LoadBalancerCanonicalHostedZoneId
            DNSName: !ImportValue cfn-gateway:LoadBalancerDnsName
        - Name: identity.dev.brigh.id
          Type: AAAA
          AliasTarget:
            HostedZoneId: !ImportValue cfn-gateway:LoadBalancerCanonicalHostedZoneId
            DNSName: !ImportValue cfn-gateway:LoadBalancerDnsName

  ProdDnsRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !ImportValue cfn-dns:HostedZoneId
      RecordSets:
        - Name: identity.brigh.id
          Type: A
          AliasTarget:
            HostedZoneId: !ImportValue cfn-gateway:LoadBalancerCanonicalHostedZoneId
            DNSName: !ImportValue cfn-gateway:LoadBalancerDnsName
        - Name: identity.brigh.id
          Type: AAAA
          AliasTarget:
            HostedZoneId: !ImportValue cfn-gateway:LoadBalancerCanonicalHostedZoneId
            DNSName: !ImportValue cfn-gateway:LoadBalancerDnsName

  DecryptedProdClientSecret:
    Type: Custom::Secret
    Properties:
      ServiceToken: !ImportValue cfn-secret-resource:SecretLambdaArn
      Ciphertext: !ImportValue sso-aws-registry:ProdGoogleClientSecret

  ProdListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue cfn-gateway:HttpsListenerArn
      Priority: 8
      Actions:
        - Type: authenticate-oidc
          Order: 1
          AuthenticateOidcConfig:
            Issuer: https://accounts.google.com
            AuthorizationEndpoint: https://accounts.google.com/o/oauth2/v2/auth
            TokenEndpoint: https://oauth2.googleapis.com/token
            UserInfoEndpoint: https://openidconnect.googleapis.com/v1/userinfo
            ClientId: !ImportValue sso-aws-registry:ProdGoogleClientId
            ClientSecret: !GetAtt DecryptedProdClientSecret.Plaintext
            SessionTimeout: 86400
        - Type: forward
          Order: 2
          TargetGroupArn: !ImportValue cfn-gateway:ProdTargetGroupArn
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/internal*"
        - Field: host-header
          HostHeaderConfig:
            Values:
              - "identity.brigh.id"

  ArtifactStore:
    Type: AWS::S3::Bucket

  ArtifactStorePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:*Object
            Resource:
              - !Sub arn:aws:s3:::${ArtifactStore}
              - !Sub arn:aws:s3:::${ArtifactStore}/*
            Principal:
              AWS:
                - !Ref AWS::AccountId
                - !ImportValue cfn-metadata:DevAgentRoleArn
                - !ImportValue cfn-metadata:ProdAgentRoleArn

  DockerRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryPolicyText:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:ListImages
            Principal:
              AWS:
                - !Ref AWS::AccountId
                - !ImportValue cfn-metadata:DevAccountId
                - !ImportValue cfn-metadata:ProdAccountId

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-build
      BadgeEnabled: true
      ServiceRole: !ImportValue cfn-utilities:BuilderRoleArn
      EncryptionKey: !ImportValue cfn-utilities:ArtifactKeyArn
      Environment:
        PrivilegedMode: true
        Image: aws/codebuild/standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: ARTIFACT_STORE
            Value: !Ref ArtifactStore
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${DockerRepo}
        Type: LINUX_CONTAINER
      Cache:
        Type: LOCAL
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
      Artifacts:
        Type: S3
        Location: !Ref ArtifactStore
        Name: buildResults.zip
        NamespaceType: BUILD_ID
        Packaging: ZIP
      Source:
        Type: GITHUB
        Location: !Sub https://github.com/${GithubOwner}/${GithubRepo}.git
        ReportBuildStatus: true

  SupersessionQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      FifoQueue: true
      MessageRetentionPeriod: 1209600

  SupersessionEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !ImportValue cfn-core:DeploymentSupersessionFunctionArn
      EventSourceArn: !GetAtt SupersessionQueue.Arn

  DeploymentQueue:
    Type: AWS::SQS::Queue
    Properties:
      ContentBasedDeduplication: true
      VisibilityTimeout: 3600
      FifoQueue: true
      MessageRetentionPeriod: 1209600

  DeploymentEventSourceMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      FunctionName: !ImportValue cfn-core:StackDeploymentFunctionArn
      EventSourceArn: !GetAtt DeploymentQueue.Arn

  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !ImportValue cfn-utilities:MasterRoleArn
      StateMachineName: !Sub ${AWS::StackName}-pipeline
      DefinitionS3Location:
        Bucket: !Ref PipelineDefinitionBucket
        Key: !Ref PipelineDefinitionKey
      DefinitionSubstitutions:
        GithubRepo: !Ref GithubRepo
        GithubOwner: !Ref GithubOwner
        ArtifactStore: !Ref ArtifactStore
        BuildProject: !Ref BuildProject
        DeploymentQueue: !Ref DeploymentQueue
        SupersessionQueue: !Ref SupersessionQueue
        DevRoleArn: !ImportValue cfn-metadata:DevAgentRoleArn
        ProdRoleArn: !ImportValue cfn-metadata:ProdAgentRoleArn
        SharedRoleArn: !ImportValue cfn-utilities:MasterRoleArn
        ApprovalNotificationFunction: !ImportValue cfn-core:ApprovalNotificationFunctionArn
        FileFromZipArn: !ImportValue cfn-core:ExtractFileFromZipFunctionArn
        AccountId: !Ref AWS::AccountId
        DevStartDatabaseFunctionArn: !ImportValue mutedac:DevStartDatabaseFunctionArn
        DevDatabaseName: !ImportValue mutedac:DevClusterName
        DatabaseAvailabilityTopic: !ImportValue mutedac:AvailabilityTopic
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3002
            - E3003
